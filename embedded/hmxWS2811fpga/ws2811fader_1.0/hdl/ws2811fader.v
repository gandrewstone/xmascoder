// File: led_driver.v
// Generated by MyHDL 0.10
// Date: Thu Jan 24 19:53:28 2019


`timescale 1ns/10ps

module ws2811fader (
    clk,
    enable,
    rgb_data,
    read_data,
    led_num,
    bitstream
);


input clk;
input enable;
input [23:0] rgb_data;
output read_data;
reg read_data;
output [9:0] led_num;
reg [9:0] led_num;
output bitstream;
reg bitstream;

reg state;
reg [23:0] rgb;
reg rebegin;
reg [14:0] interPrefaceClk;
reg [6:0] interBitClk;
reg [9:0] curLed;
reg [4:0] bitNum;



always @(posedge clk) begin: LED_DRIVER_LOGIC
    
    if (enable) begin
        if ((state == 0)) begin
            if ((interPrefaceClk < 30000)) begin
                interPrefaceClk <= (interPrefaceClk + 1);
            end
            else begin
                interPrefaceClk <= 0;
                state <= 1;
            end
        end
        else begin
            if (($signed({1'b0, interBitClk}) < (125 - 1))) begin
                interBitClk <= (interBitClk + 1);
            end
            else begin
                interBitClk <= 0;
                if ((rebegin && (bitNum == 23))) begin
                    state <= 0;
                end
            end
        end
    end
    else begin
        interPrefaceClk <= 0;
        state <= 0;
        interBitClk <= 0;
    end
end


always @(rgb, bitNum, enable, state, interBitClk) begin: LED_DRIVER_GENBITSTREAM
    if ((enable && (state != 0))) begin
        if (rgb[(23 - $signed({1'b0, bitNum}))]) begin
            bitstream = (interBitClk <= 62);
        end
        else begin
            bitstream = (interBitClk <= 31);
        end
    end
    else begin
        bitstream = 0;
    end
end


always @(posedge clk) begin: LED_DRIVER_GENLEDNUM
    
    if ((!enable)) begin
        led_num <= 0;
        curLed <= 0;
        bitNum <= 0;
        read_data <= 0;
    end
    else begin
        if ((rebegin && (state == 0))) begin
            rebegin <= 0;
        end
        if (($signed({1'b0, interBitClk}) == (125 - 1))) begin
            if ((bitNum == 22)) begin
                if ((curLed < 1000)) begin
                    curLed <= (curLed + 1);
                    led_num <= (curLed + 1);
                end
                else begin
                    led_num <= 0;
                    curLed <= 0;
                    rebegin <= 1;
                end
                read_data <= 1;
            end
            else begin
                read_data <= 0;
            end
            if ((bitNum == 23)) begin
                bitNum <= 0;
            end
            else begin
                bitNum <= (bitNum + 1);
            end
        end
        else begin
            read_data <= 0;
        end
        if (($signed({1'b0, interBitClk}) == (125 - 2))) begin
            if ((bitNum == 23)) begin
                rgb <= rgb_data;
            end
        end
    end
end

endmodule
